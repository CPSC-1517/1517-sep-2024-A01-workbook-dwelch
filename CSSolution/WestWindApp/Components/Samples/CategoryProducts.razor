@page "/categoryproducts"
<PageTitle>Products By Category</PageTitle>
@rendermode InteractiveServer
@using WestWindSystem.BLL;
@using WestWindSystem.Entities;

<h3>Products  By Category</h3>
<h4>... view products by category for CRUD Update/Delete selection</h4>

<!-- area to feedback messages-->
@if (feedback.Length > 0)
{
    <div class="alert alert-info">
        <p>@feedback</p>
    </div>
}
<!-- area to error messages-->
@if (errors.Count > 0)
{
    <div class="alert alert-danger">
        <p>Please fix the following issues:</p>
        <ul>
            @foreach (var error in errors)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}
<div class="col-md-12">
    <label for="catlist">Select a category</label>
    &nbsp;&nbsp;
    <select id="catlist" @bind="categoryidarg">
        <option value="0">... select ..</option>
        @foreach (Category item in categoryList)
        {
            <option value="@item.CategoryID">@item.CategoryName</option>
        }
    </select>
    &nbsp;&nbsp;
    <button type="submit" class="btn btn-primary rounded-pill" @onclick="Fetch">Fetch Products</button>
</div>
@code {
    private string feedback = "";
    private List<string> errors = new List<string>();

    private int categoryidarg;

    [Inject]
    public CategoryServices _categoryServices { get; set; }
    private List<Category> categoryList = new List<Category>();

    [Inject]
    public SupplierServices _supplierServices { get; set; }
    private List<Supplier> supplierList = new List<Supplier>();

    [Inject]
    public ProductServices _productServices { get; set; }
    public List<Product> productList = new List<Product>();

    protected override void OnInitialized()
    {
        categoryList = _categoryServices.Category_GetAll();
        supplierList = _supplierServices.Supplier_GetAll();
        base.OnInitialized();
    }

    private Exception GetInnerException(Exception ex)
    {
        while (ex.InnerException != null)
            ex = ex.InnerException;
        return ex;
    }

    private void Fetch()
    {
        feedback = "inside Fetch";
    }
}
